package com.avantir.blowfish.mock;

import com.avantir.blowfish.services.SecurityService;
import org.junit.Before;
import org.junit.Test;

import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.PublicKey;

/**
 * Created by lekanomotayo on 19/04/2018.
 */
public class HsmProviderTest {

    HsmProvider hsmProvider;
    SecurityService securityService;

    @Before
    public void setup() throws Exception{
        hsmProvider = new HsmProvider();
        securityService = new SecurityService();
    }

    @Test
    public void testGenerateRSAKeyPair(){

        /*
        String privateEncodedHex
        String publicEncodedHex = "30820122300D06092A864886F70D01010105000382010F003082010A0282010100A5E931D5C8AE2E4DB3CFDDD155B422863392CE8414EE02D3023C527C3501C51B29A00048D620D33A287BB3AF950D6F42695EEDA350B8ADAD17E5AE793A11B0462DD05DEC2FFF118EEE23A75022E73253A02C21E171E39FDAA6E37DE94392AF246D371E73B2A548DFF6E3C3EDECD267722E879D108C4406D646F20E09CFB93AC75F929F0828C01502BC66A99E85DCF99A043C93434E602EA2DB932406D5E340186256316CD115BB3ADD16AF5E5C145D90207ED049C3E10BA9FEF527E74DA8677F957B12BB2E6B4D947031814B95697EBBD91152393ABDEFD9638168859BC379ABEECE784D6920D6E8888A5BE0BC71465AC5D099F7872DF49F00680F05E46E24DB0203010001";
        System.out.println(privateEncodedHex);
        System.out.println(publicEncodedHex);
        PublicKey publicKey = securityService.getPublicKey(publicEncodedHex).get();
        PrivateKey privateKey = securityService.getPrivateKey(privateEncodedHex).get();

        String nibssKey = "DBEECACCB4210977ACE73A1D873CA59F";
        String checkDigit = "1DDD47";
        String cryptogram = hsmProvider.encryptWithRSA(publicEncodedHex, nibssKey);
        String cipherText = hsmProvider.decryptWithRSA(privateEncodedHex, cryptogram);
        String checkDigitVerify = hsmProvider.encryptWith3DES(cipherText, "0000000000000000");
        String checkDigitCipher = hsmProvider.decryptWith3DES(cipherText, checkDigitVerify);
        System.out.println(cryptogram);
        System.out.println(checkDigit);
        System.out.println(checkDigitVerify);
        System.out.println(checkDigitCipher);
        */

        String key = "EACE1C67342C0E9745FD1A3D1AC80191";
        String cryptogram = hsmProvider.encryptWith3DES(key, "5399831614073498");
        String cipher = hsmProvider.decryptWith3DES(key, cryptogram);

        System.out.println(cryptogram);
        System.out.println(cipher);
    }

}
